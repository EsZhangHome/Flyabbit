apply plugin: 'com.dhc.comgradle'
apply plugin: 'com.google.protobuf'
//apply plugin: 'com.novoda.bintray-release'//添加
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    //config protobuf plugin   @Link{home/src/main/proto}
    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
            java {
                srcDir 'src/main/java'
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile rootProject.ext.dependencies["junit"]

    implementation project(':businessComponent')
    //dagger2的apt注解
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]

    //阿里的Arouter的注解
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

    annotationProcessor "com.google.dagger:dagger-compiler:2.13"
    annotationProcessor "com.alibaba:arouter-compiler:1.1.2.1"
}

//config protobuf plugin   @Link{home/src/main/proto}
protobuf {
    protoc {
        // You still need protoc like in the non-Android case
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // In most cases you don't need the full Java output
                // if you use the lite output.
                remove java
            }
            task.plugins {
                javalite { }
            }
        }
    }
}

//这是上传jcenter使用,不用关心
//publish {
//    userOrg = 'chengzichen'//bintray.com用户名
//    groupId = 'com.dhc.flyabbit.home'//jcenter上的路径
//    artifactId = 'homelib'//项目名称
//    publishVersion = '1.0.0'//版本号
//    desc = 'Oh hi, this is flyabbit , show home lib'//描述，不重要
//    website = 'https://github.com/chengzichen/Flyabbit'//网站，不重要
//}